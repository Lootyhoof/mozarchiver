<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mza/skin/general/general.css" type="text/css"?>
<?xml-stylesheet href="chrome://mza/skin/integration/multiSaveDialog.css" type="text/css"?>
<!DOCTYPE dialog SYSTEM "chrome://mza/locale/multiSaveDialog.dtd">
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Mozilla Archive Format.
   -
   - The Initial Developer of the Original Code is
   - Paolo Amadini <http://www.amadzone.org/>.
   - Portions created by the Initial Developer are Copyright (C) 2009
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!--
   - This dialog is shown to save multiple tabs in one or more archives.
   -->

<dialog
 id="multiSaveDialog"
 title="&window.title;"
 buttons="accept,cancel"
 buttonlabelaccept="&savebutton.label;"
 ondialogaccept="return MultiSaveDialog.onDialogAccept();"
 xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
 width="500"
 height="400"
 persist="screenX screenY width height"
 onload="MultiSaveDialog.onLoadDialog();"
 >
  <!-- Dialog machinery -->
  <script type="application/x-javascript" src="multiSaveDialog.js" />

  <!-- Workaround until selection with left mouse button is fixed. -->
  <description style="font-weight: bold;">Use SPACE BAR to select.</description>

  <!-- Tab selection tree -->
  <!--
     - This tree is designed to work with the tabs data source. The tree view
     -  accesses the data source directly (has flags="dont-build-content")
     -  since in this way the underlying RDF resources can be accessed using
     -  the getResourceAtIndex method of the view, and modified directly.
     -
     - The tree uses checkbox columns (has editable="true" and treecol elements
     -  with type="checkbox"). All the columns except the one of the checkbox
     -  have editable="false" explicitly defined.
     -
     - The tree columns, including the one of the checkbox, can be rearranged
     -  by the user (the tree has enableColumnDrag="true"), and their state is
     -  persisted.
     -
     - The open state of containers in the tree is not persisted (has
     -  statedatasource="rdf:null").
     -
     - The data in the tree cannot be sorted.
     -->
  <tree id="treeTabs"
        flex="1"
        datasources="rdf:null"
        ref="urn:maf:windows"
        flags="dont-build-content"
        statedatasource="rdf:null"
        enableColumnDrag="true"
        editable="true"
        onkeypress="MultiSaveDialog.onTreeKeyPress(event);"
        >
    <treecols>
      <treecol id="tcChecked"
               type="checkbox" editable="true" ignoreincolumnpicker="true"
               width="20" fixed="true"
               persist="width ordinal hidden" />
      <splitter class="tree-splitter" />
      <treecol id="tcTitle"
               primary="true"
               editable="false"
               flex="1"
               label="&tabs.title.header;"
               sort="urn:maf:vocabulary#title"
               sortActive="true" sortDirection="ascending"
               persist="width ordinal hidden sortActive sortDirection" />
      <splitter class="tree-splitter" />
      <treecol id="tcLocation"
               editable="false"
               flex="1"
               label="&tabs.location.header;"
               sort="urn:maf:vocabulary#originalUrl"
               persist="width ordinal hidden sortActive sortDirection" />
    </treecols>
    <template>

      <!--
         - This template query handles the "window" resource in the data source.
         -  The triple checks that the object we are starting from is actually
         -  an instance of "windows", the container of "window" resources. If
         -  this is the case, then each child resource is examined, assigning it
         -  to the ?window template variable.
         -
         - Since the "uri" attribute in the treeitem points to ?window, the next
         -  iteration in the template recursive generation will start again from
         -  the "window" resource. At that point, the triple for this query will
         -  not match using the new starting point, and only the next query will
         -  be used.
         -->
      <queryset>
        <query>
          <content uri="?start" />
          <triple subject="?start"
                  predicate="http://www.w3.org/1999/02/22-rdf-syntax-ns#instanceOf"
                  object="urn:maf:windows" />
          <member container="?start" child="?window" />
        </query>
        <rule>
          <bindings>
            <!-- Bind the properties associated with the window. The "checked"
                  property is always present and is designed to be used as
                  a value for the checkbox column in the tree. -->
            <binding subject="?window"
                     predicate="urn:maf:vocabulary#checked"
                     object="?checked" />
          </bindings>
          <action>
            <treechildren>
              <treeitem uri="?window">
                <!-- Display one row with fixed content and the checkbox -->
                <treerow>
                  <treecell value="?checked" />
                  <treecell editable="false" label="&tabs.all.label;" />
                  <treecell editable="false" />
                </treerow>
              </treeitem>
            </treechildren>
          </action>
        </rule>
      </queryset>

      <!--
         - This template query handles the "tab" resource in the data source.
         -  The triple checks that the object we are starting from is actually
         -  an instance of "window", the container of "tab" resources. If this
         -  is the case, then each child resource is examined, assigning it to
         -  the ?tab template variable.
         -
         - The next iteration in the template recursive generation will start
         -  from the "tab" resource, that will not match any other query, thus
         -  leaving tabs as leaf nodes.
         -->
      <queryset>
        <query>
          <content uri="?start" />
          <triple subject="?start"
                   predicate="http://www.w3.org/1999/02/22-rdf-syntax-ns#instanceOf"
                   object="urn:maf:window" />
          <member container="?start" child="?tab" />
        </query>
        <rule>
          <bindings>
            <!-- Bind the properties associated with the tab. The "checked"
                  property is always present and is designed to be used as
                  a value for the checkbox column in the tree. -->
            <binding subject="?tab"
                     predicate="urn:maf:vocabulary#title"
                     object="?title" />
            <binding subject="?tab"
                     predicate="urn:maf:vocabulary#originalUrl"
                     object="?originalUrl" />
            <binding subject="?tab"
                     predicate="urn:maf:vocabulary#checked"
                     object="?checked" />
          </bindings>
          <action>
            <treechildren>
              <treeitem uri="?tab">
                <treerow>
                  <!-- Display rows with tab details and checkboxes -->
                  <treecell value="?checked" />
                  <treecell editable="false" label="?title" />
                  <treecell editable="false" label="?originalUrl" />
                </treerow>
              </treeitem>
            </treechildren>
          </action>
        </rule>
      </queryset>

    </template>
  </tree>
</dialog>
